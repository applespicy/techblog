const router = require('express').Router();

const { User, Comment, Post } = require('../../model');

//routes is invoked for homepage
// router.get('/', (req, res) => {
//   try {
//     res.render('all-post', {
//       loggedIn: req.session.loggedIn,
//       user_name: req.session.user_name,
//     });
//   } catch (err) {
//     res.status(500).json(err);
//   }
// });

// get all post for homepage
router.get('/', async (req, res) => {
    try {
      const postData = await Post.findAll({
       
        attributes:['id', 'title','content'],
        
        include: [
            {
            model: Comment,
            attributes: ['id', 'post_id', 'user_id' ],
                include: 
                {
                model: User,
                attributes: ['username' ],
                 }
             },
        ]
        });
    
        const data = postData.map((Data) => Data.get({ plain: true }));
        res.render('all-post',{ 
        data, loggedIn: req.session.loggedIn,
        });
    } catch (err) {
       res.status(500).json(err);
    }
  });

  router.get('/login', async (req, res) => {
    if(req.session.loggedIn){
        res.redirect('/dashboard');
        return;
    }
    res.render('login');
  });

  router.get('/post/:id', async (req, res) => {
    try {
      const postData = await Post.findOne({
        where: {
          id: req.params.id,
        },
        include: [{
          model: Comment,
          attributes: ['id', 'post_id', 'user_id']
        },
        {
            model:User,
            attributes:['username']
        }
    ]
      });
      if (!postData) {
        res.status(404).json({ message: 'No Post found with this id!' });
        return;
      }
      res.status(200).json(postData);
    } catch (err) {
      res.status(500).json(err);
    }
  });

  module.exports = router;
  